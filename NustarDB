-- Create USER table
CREATE TABLE [USER] (
    PK_USER_ID INT PRIMARY KEY IDENTITY(1,1),
    USERNAME VARCHAR(255) NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    ROLE NVARCHAR(50) CHECK (ROLE IN ('Admin', 'Staff', 'Guest'))
);

-- Create ADMIN table
CREATE TABLE ADMIN (
    PK_ADMIN_ID INT PRIMARY KEY IDENTITY(1,1),
    FK_USER_ID INT NOT NULL,
    VIEW_REPORTS VARCHAR(255),
    LNAME VARCHAR(30),
    FNAME VARCHAR(30),
    CONSTRAINT FK_ADMIN_USER FOREIGN KEY (FK_USER_ID) REFERENCES [USER](PK_USER_ID)
);

-- Create GUEST table
CREATE TABLE GUEST (
    PK_GUEST_ID INT PRIMARY KEY IDENTITY(1,1),
    LNAME VARCHAR(30) NOT NULL,
    FNAME VARCHAR(30) NOT NULL,
    MIDNAME VARCHAR(30),
    USERNAME VARCHAR(255),
    PASSWORD VARCHAR(255)
);

-- Create STAFF table
CREATE TABLE STAFF (
    PK_STAFF_ID INT PRIMARY KEY IDENTITY(1,1),
    FK_USER_ID INT NOT NULL,
    FNAME VARCHAR(30) NOT NULL,
    ROLE NVARCHAR(50) CHECK (ROLE IN ('Manager', 'Receptionist', 'Housekeeper', 'Maintenance')),
    DEPARTMENT VARCHAR(30),
    CONSTRAINT FK_STAFF_USER FOREIGN KEY (FK_USER_ID) REFERENCES [USER](PK_USER_ID)
);

-- Create ROOM table
CREATE TABLE ROOM (
    PK_ROOM_ID INT PRIMARY KEY IDENTITY(1,1),
    ROOM_TYPE NVARCHAR(50) CHECK (ROOM_TYPE IN ('Single', 'Double', 'Suite', 'Deluxe')),
    STATUS NVARCHAR(50) CHECK (STATUS IN ('Available', 'Occupied', 'Maintenance', 'Cleaning')),
    PRICE MONEY NOT NULL
);

-- Create SERVICE table
CREATE TABLE SERVICE (
    PK_SERVICE_ID INT PRIMARY KEY IDENTITY(1,1),
    FK_GUEST_ID INT,
    SERVICE_TYPE NVARCHAR(50) CHECK (SERVICE_TYPE IN ('Room Service', 'Laundry', 'Spa', 'Transport', 'Food')),
    STATUS NVARCHAR(50) CHECK (STATUS IN ('Requested', 'In Progress', 'Completed', 'Cancelled')),
    CONSTRAINT FK_SERVICE_GUEST FOREIGN KEY (FK_GUEST_ID) REFERENCES GUEST(PK_GUEST_ID)
);

-- Create BOOKING table
CREATE TABLE BOOKING (
    PK_BOOKING_ID INT PRIMARY KEY IDENTITY(1,1),
    FK1_GUEST_ID INT NOT NULL,
    FK2_ROOM_ID INT NOT NULL,
    FK3_SERVICE_ID INT,
    CHECK_IN DATETIME NOT NULL,
    CHECK_OUT DATETIME,
    CONSTRAINT FK_BOOKING_GUEST FOREIGN KEY (FK1_GUEST_ID) REFERENCES GUEST(PK_GUEST_ID),
    CONSTRAINT FK_BOOKING_ROOM FOREIGN KEY (FK2_ROOM_ID) REFERENCES ROOM(PK_ROOM_ID),
    CONSTRAINT FK_BOOKING_SERVICE FOREIGN KEY (FK3_SERVICE_ID) REFERENCES SERVICE(PK_SERVICE_ID)
);

-- Create PAYMENT table
CREATE TABLE PAYMENT (
    PK_PAYMENT_ID INT PRIMARY KEY IDENTITY(1,1),
    FK_GUEST_ID INT NOT NULL,
    AMOUNT MONEY NOT NULL,
    PAYMENT_METHOD NVARCHAR(50) CHECK (PAYMENT_METHOD IN ('Cash', 'Credit Card', 'Debit Card', 'Online')),
    CREATED_AT DATETIME DEFAULT GETDATE(),
    LINE_TOTAL MONEY,
    CONSTRAINT FK_PAYMENT_GUEST FOREIGN KEY (FK_GUEST_ID) REFERENCES GUEST(PK_GUEST_ID)
);

-- Create INVOICE table
CREATE TABLE INVOICE (
    PK_INVOICE_ID INT PRIMARY KEY IDENTITY(1,1),
    FK_PAYMENT_ID INT NOT NULL,
    TOTAL_AMOUNT MONEY NOT NULL,
    CREATED_AT DATETIME DEFAULT GETDATE(),
    CONSTRAINT FK_INVOICE_PAYMENT FOREIGN KEY (FK_PAYMENT_ID) REFERENCES PAYMENT(PK_PAYMENT_ID)
);

-- Create HOUSEKEEPING table
CREATE TABLE HOUSE_KEEPING (
    PK_HOUSEKEEPING_ID INT PRIMARY KEY IDENTITY(1,1),
    FK1_ROOM_ID INT NOT NULL,
    FK2_STAFF_ID INT NOT NULL,
    STATUS NVARCHAR(50) CHECK (STATUS IN ('Pending', 'In Progress', 'Completed')),
    CONSTRAINT FK_HOUSEKEEPING_ROOM FOREIGN KEY (FK1_ROOM_ID) REFERENCES ROOM(PK_ROOM_ID),
    CONSTRAINT FK_HOUSEKEEPING_STAFF FOREIGN KEY (FK2_STAFF_ID) REFERENCES STAFF(PK_STAFF_ID)
);

-- Create MAINTENANCE table
CREATE TABLE MAINTENANCE (
    PK_MAINTENANCE_ID INT PRIMARY KEY IDENTITY(1,1),
    FK1_ROOM_ID INT NOT NULL,
    FK2_STAFF_ID INT NOT NULL,
    ISSUE VARCHAR(255) NOT NULL,
    STATUS NVARCHAR(50) CHECK (STATUS IN ('Pending', 'In Progress', 'Completed')),
    CONSTRAINT FK_MAINTENANCE_ROOM FOREIGN KEY (FK1_ROOM_ID) REFERENCES ROOM(PK_ROOM_ID),
    CONSTRAINT FK_MAINTENANCE_STAFF FOREIGN KEY (FK2_STAFF_ID) REFERENCES STAFF(PK_STAFF_ID)
);

-- Adding indexes to improve query performance
CREATE INDEX IDX_GUEST_NAME ON GUEST(LNAME, FNAME);
CREATE INDEX IDX_ROOM_STATUS ON ROOM(STATUS);
CREATE INDEX IDX_BOOKING_DATES ON BOOKING(CHECK_IN, CHECK_OUT);
CREATE INDEX IDX_PAYMENT_GUEST ON PAYMENT(FK_GUEST_ID);
CREATE INDEX IDX_SERVICE_STATUS ON SERVICE(STATUS);
