@model WebApplication1.Models.BaseViewModel

@{
    Layout = "_DashboardLayout";
    ViewData["Title"] = "User Dashboard";
}

<!-- User Profile Section -->
<div class="profile-section enhanced-profile-maroon text-white">
    <div class="row align-items-center">
        <div class="col-md-3 text-center">
            <div class="user-avatar-large enhanced-avatar-maroon p-0" style="background: none; box-shadow: none;">
                @if (!string.IsNullOrEmpty(Model.Profile.ProfileImageUrl))
                {
                    <img src="@Model.Profile.ProfileImageUrl" alt="Profile Picture" class="rounded-circle" style="width: 150px; height: 150px; object-fit: cover; border: 5px solid #fff; box-shadow: 0 0 0 6px rgba(255,255,255,0.15), 0 8px 32px rgba(0,0,0,0.10); background: none;">
                }
                else
                {
                    <i class="fas fa-user" style="font-size: 5rem; color: #fff;"></i>
                }
            </div>
        </div>
        <div class="col-md-9 d-flex flex-column justify-content-center">
            <h3 class="fw-bold mb-1 user-name-maroon text-white">Welcome, @Model.Profile.FirstName @Model.Profile.LastName</h3>
            <div class="user-meta-maroon text-white-50">
                <i class="fas fa-envelope me-2"></i>@Model.Profile.Email
            </div>
        </div>
    </div>
</div>

<hr class="section-divider mb-4 mt-0" />

<!-- Current Reservations -->
<h4 class="section-title mb-3"><i class="fas fa-bed me-2"></i>Current Reservations</h4>
<div class="section-bg p-4 rounded-4">
    <div class="row mb-2">
        @if (Model.ActiveReservations != null && Model.ActiveReservations.Any())
        {
            var displayedReservations = Model.ActiveReservations.Take(2).ToList();
            foreach (var reservation in displayedReservations)
            {
                <div class="col-md-6 mb-4">
                    <div class="dashboard-card enhanced-card h-100 animate-fade-in reservation-accent-bar-maroon position-relative">
                        <div class="reservation-accent-maroon"></div>
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <h5 class="fw-semibold mb-0"><i class="fas fa-door-open me-2 text-maroon"></i>@reservation.RoomType</h5>
                            <span class="reservation-status badge-status-maroon">@reservation.Status</span>
                        </div>
                        <p class="text-muted mb-2"><i class="fas fa-calendar-alt me-1"></i>@reservation.CheckInDate.ToString("MMM dd") - @reservation.CheckOutDate.ToString("MMM dd, yyyy")</p>
                        <div class="d-flex justify-content-between align-items-center">
                            <div><i class="fas fa-user me-1"></i> @reservation.NumberOfGuests @(reservation.NumberOfGuests == 1 ? "Adult" : "Adults")</div>
                            <a href="#" class="btn btn-outline-maroon btn-sm" data-bs-toggle="modal" data-bs-target="#viewDetailsModal-@reservation.Id">View Details</a>
                        </div>
                    </div>
                </div>
                <!-- View Details Modal -->
                <div class="modal fade enhanced-modal" id="viewDetailsModal-@reservation.Id" tabindex="-1" aria-labelledby="viewDetailsModalLabel-@reservation.Id" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content rounded-4 shadow-lg">
                            <div class="modal-header">
                                <h5 class="modal-title" id="viewDetailsModalLabel-@reservation.Id">Reservation Details</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <p><strong>Room:</strong> @reservation.RoomType</p>
                                <p><strong>Dates:</strong> @reservation.CheckInDate.ToString("MMM dd") - @reservation.CheckOutDate.ToString("MMM dd, yyyy")</p>
                                <p><strong>Guests:</strong> @reservation.NumberOfGuests @(reservation.NumberOfGuests == 1 ? "Adult" : "Adults")</p>
                                <p><strong>Total:</strong> $@reservation.TotalAmount.ToString("N2")</p>
                                <p><strong>Status:</strong> <span class="badge bg-@(reservation.Status == "Confirmed" ? "success" : "warning")">@reservation.Status</span></p>
                                @if (!string.IsNullOrEmpty(reservation.SpecialRequests))
                                {
                                    <p><strong>Special Requests:</strong> @reservation.SpecialRequests</p>
                                }
                            </div>
                            <div class="modal-footer">
                                @if (reservation.Status == "Pending")
                                {
                                    <button type="button" class="btn btn-danger" onclick="cancelReservation(@reservation.Id)">Cancel Reservation</button>
                                }
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
            if (Model.ActiveReservations.Count > 2)
            {
                <div class="col-12 text-center mt-2">
                    <a href="@Url.Action("Reservations", "Home")" class="btn btn-outline-maroon see-more-btn"><i class="fas fa-arrow-right me-1"></i>See More</a>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i> You don't have any active reservations at the moment.
                </div>
            </div>
        }
    </div>
</div>

<hr class="section-divider my-4" />

<!-- Available Services -->
<h4 class="section-title mb-3"><i class="fas fa-concierge-bell me-2"></i>Available Services</h4>
<div class="section-bg p-4 rounded-4">
    <div class="row">
        @if (Model.Services != null && Model.Services.Any())
        {
            var displayedServices = Model.Services.Take(2).ToList();
            foreach (var service in displayedServices)
            {
                <div class="col-md-6 mb-4">
                    <div class="service-card enhanced-card h-100 animate-fade-in service-card-overlay">
                        <div class="d-flex align-items-center mb-2">
                            <i class="@service.IconClass fa-2x me-3 text-gradient"></i>
                            <h5 class="fw-semibold mb-0">@service.Name</h5>
                        </div>
                        <p class="small text-muted mb-3">@service.Description</p>
                        <a href="@Url.Action("Services", "Home")" class="btn btn-maroon w-100 py-2"><i class="fas fa-arrow-right me-1"></i>Book Now</a>
                    </div>
                </div>
            }
            if (Model.Services.Count > 2)
            {
                <div class="col-12 text-center mt-2">
                    <a href="@Url.Action("Services", "Home")" class="btn btn-outline-maroon see-more-btn"><i class="fas fa-arrow-right me-1"></i>See More</a>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i> No services are currently available.
                </div>
            </div>
        }
    </div>
</div>

@section Styles {
    <style>
        :root {
            --primary-color: #8B1C1C;
            --primary-dark: #5A1010;
            --accent: #F7C873;
            --bg-light: #f8f9fa;
            --bg-gradient: linear-gradient(135deg, #fff 60%, #f8f9fa 100%);
        }
        .enhanced-profile-maroon {
            border: none;
            box-shadow: 0 8px 32px rgba(139,28,28,0.10);
            background: var(--primary-color) !important;
            padding: 2.5rem 2rem 2rem 2rem;
            margin-bottom: 2rem;
            border-radius: 24px;
        }
        .enhanced-avatar-maroon {
            background: none !important;
            border: none;
            box-shadow: none;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 150px;
            height: 150px;
            margin: 0 auto 10px auto;
            padding: 0;
        }
        .user-name-maroon {
            color: #fff;
            font-size: 2rem;
            letter-spacing: 0.5px;
        }
        .user-meta-maroon {
            color: #f8f9fa;
            font-size: 1.1rem;
            margin-top: 0.5rem;
        }
        .reservation-accent-bar-maroon {
            padding-left: 1.5rem !important;
        }
        .reservation-accent-maroon {
            position: absolute;
            left: 0; top: 0; bottom: 0;
            width: 8px;
            border-radius: 20px 0 0 20px;
            background: var(--primary-color);
            box-shadow: 2px 0 8px rgba(139,28,28,0.10);
        }
        .badge-status-maroon {
            font-size: 0.95rem;
            font-weight: 600;
            padding: 7px 18px;
            border-radius: 16px;
            background: var(--primary-color);
            color: #fff;
            box-shadow: 0 2px 8px rgba(139,28,28,0.10);
            border: none;
            letter-spacing: 0.5px;
        }
        .text-maroon {
            color: var(--primary-color) !important;
        }
        .section-bg {
            background: #fff;
            box-shadow: 0 2px 16px rgba(139,28,28,0.07);
            margin-bottom: 2rem;
        }
        .section-divider {
            border: none;
            border-top: 2px solid var(--primary-color);
            opacity: 0.15;
        }
        .enhanced-card {
            border-radius: 20px;
            box-shadow: 0 4px 24px rgba(139,28,28,0.10);
            border: 1px solid #ececec;
            transition: transform 0.2s, box-shadow 0.2s;
            background: #fff;
            padding: 2rem 1.5rem 1.5rem 1.5rem;
            position: relative;
        }
        .enhanced-card:hover {
            transform: translateY(-4px) scale(1.03);
            box-shadow: 0 8px 32px rgba(139,28,28,0.18);
        }
        .service-card-overlay::before {
            content: '';
            position: absolute;
            top: 0; left: 0; right: 0; bottom: 0;
            background: linear-gradient(120deg, var(--accent) 0%, transparent 100%);
            opacity: 0.08;
            border-radius: 20px;
            z-index: 0;
        }
        .service-card-overlay > * { position: relative; z-index: 1; }
        .see-more-btn {
            font-weight: 500;
            letter-spacing: 0.5px;
            padding: 10px 32px;
            border-radius: 24px;
            font-size: 1.1rem;
        }
        .btn-maroon {
            background: var(--primary-color);
            color: #fff;
            border: none;
            border-radius: 18px;
            font-weight: 600;
            box-shadow: 0 2px 8px rgba(139,28,28,0.10);
            transition: background 0.2s, box-shadow 0.2s, transform 0.2s;
        }
        .btn-maroon:hover {
            background: var(--primary-dark);
            color: #fff;
            transform: translateY(-2px) scale(1.04);
            box-shadow: 0 4px 16px rgba(139,28,28,0.15);
        }
        .btn-outline-maroon {
            border: 2px solid var(--primary-color);
            color: var(--primary-color);
            background: transparent;
            border-radius: 18px;
            font-weight: 600;
            transition: background 0.2s, color 0.2s, box-shadow 0.2s;
        }
        .btn-outline-maroon:hover {
            background: var(--primary-color);
            color: #fff;
            box-shadow: 0 2px 8px rgba(139,28,28,0.10);
        }
        .text-gradient {
            background: linear-gradient(90deg, var(--primary-color), var(--accent));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        .animate-fade-in {
            animation: fadeIn 0.7s cubic-bezier(.39,.575,.565,1.000) both;
        }
        @@keyframes fadeIn {
            0% { opacity: 0; transform: translateY(20px); }
            100% { opacity: 1; transform: none; }
        }
        .enhanced-modal .modal-content {
            border-radius: 18px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.12);
        }
        .section-title i {
            color: var(--primary-color);
        }
        .fw-bold { font-weight: bold; }
        .fw-semibold { font-weight: 600; }
        .mb-4 { margin-bottom: 1.5rem !important; }
        .mb-3 { margin-bottom: 1rem !important; }
        .py-2 { padding-top: 0.5rem !important; padding-bottom: 0.5rem !important; }
        .w-100 { width: 100% !important; }
    </style>
}

@section Scripts {
    <script>
        function cancelReservation(reservationId) {
            if (confirm('Are you sure you want to cancel this reservation?')) {
                $.post('/Reservations/Cancel', { id: reservationId })
                    .done(function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert('Failed to cancel reservation: ' + response.message);
                        }
                    })
                    .fail(function() {
                        alert('An error occurred while canceling the reservation.');
                    });
            }
        }

        function submitServiceBooking(serviceId) {
            const form = $(`#serviceForm-${serviceId}`);
            if (!form[0].checkValidity()) {
                form[0].reportValidity();
                return;
            }

            const bookingData = {
                serviceId: serviceId,
                date: $(`#serviceDate-${serviceId}`).val(),
                time: $(`#serviceTime-${serviceId}`).val(),
                option: $(`#serviceOption-${serviceId}`).val(),
                specialRequests: $(`#serviceSpecialRequests-${serviceId}`).val()
            };

            $.post('/Services/Book', bookingData)
                .done(function(response) {
                    if (response.success) {
                        alert('Booking submitted successfully!');
                        $(`#serviceModal-${serviceId}`).modal('hide');
                        form[0].reset();
                    } else {
                        alert('Failed to submit booking: ' + response.message);
                    }
                })
                .fail(function() {
                    alert('An error occurred while submitting the booking.');
                });
        }

        // Initialize date inputs with minimum date as today
        $(document).ready(function() {
            const today = new Date().toISOString().split('T')[0];
            $('input[type="date"]').attr('min', today);
        });
    </script>
}
