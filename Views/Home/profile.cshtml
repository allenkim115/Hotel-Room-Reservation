@model WebApplication1.Models.BaseViewModel

@{
    Layout = "_DashboardLayout";
    ViewData["Title"] = "My Profile";
}

<div class="profile-container">
    <div class="row">
        <!-- Profile Information -->
        <div class="col-md-4">
            <div class="profile-card">
                <div class="profile-header">
                    <div class="profile-image">
                        @if (!string.IsNullOrEmpty(Model.Profile.ProfileImageUrl))
                        {
                            <img src="@Model.Profile.ProfileImageUrl" alt="Profile Picture" class="rounded-circle" id="profilePicture">
                        }
                        else
                        {
                            <img src="~/images/profile.png" alt="Profile Picture" class="rounded-circle" id="profilePicture">
                        }
                        <button class="btn btn-edit-image" onclick="document.getElementById('profileImageInput').click()">
                            <i class="fas fa-camera"></i>
                        </button>
                        <input type="file" id="profileImageInput" style="display: none" accept="image/*" onchange="uploadProfileImage(this)">
                    </div>
                    <h2 class="profile-name">@Model.Profile.FirstName @Model.Profile.LastName</h2>
                    <p class="profile-email">@Model.Profile.Email</p>
                    <div class="profile-status">
                        <span class="badge badge-success">@Model.Profile.MembershipLevel</span>
                        <span class="badge badge-primary">@Model.Profile.LoyaltyPoints Points</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Account Settings -->
        <div class="col-md-8">
            <div class="settings-card">
                <h3 class="settings-title">Account Settings</h3>
                <form id="profileForm" class="settings-form" method="post">
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label>First Name</label>
                        <input type="text" class="form-control" name="FirstName" value="@Model.Profile.FirstName" required>
                    </div>
                    <div class="form-group">
                        <label>Last Name</label>
                        <input type="text" class="form-control" name="LastName" value="@Model.Profile.LastName" required>
                    </div>
                    <div class="form-group">
                        <label>Email Address</label>
                        <input type="email" class="form-control" name="Email" value="@Model.Profile.Email" required>
                    </div>
                    <div class="form-group">
                        <label>Phone Number</label>
                        <input type="tel" class="form-control" name="PhoneNumber" value="@Model.Profile.PhoneNumber" required>
                    </div>
                    <div class="form-group">
                        <label>Address</label>
                        <textarea class="form-control" name="Address" rows="3">@Model.Profile.Address</textarea>
                    </div>
                    <div class="form-group">
                        <label>Preferred Language</label>
                        <select class="form-control" name="PreferredLanguage">
                            <option value="en" selected="@(Model.Profile.PreferredLanguage == "en")">English</option>
                            <option value="es" selected="@(Model.Profile.PreferredLanguage == "es")">Spanish</option>
                            <option value="fr" selected="@(Model.Profile.PreferredLanguage == "fr")">French</option>
                            <option value="de" selected="@(Model.Profile.PreferredLanguage == "de")">German</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Notification Preferences</label>
                        <div class="custom-control custom-checkbox">
                            <input type="hidden" name="EmailNotifications" value="false" />
                            <input type="checkbox" class="custom-control-input" id="emailNotifications" name="EmailNotifications" value="true" @(Model.Profile.EmailNotifications ? "checked" : "")>
                            <label class="custom-control-label" for="emailNotifications">Email Notifications</label>
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input type="hidden" name="SmsNotifications" value="false" />
                            <input type="checkbox" class="custom-control-input" id="smsNotifications" name="SmsNotifications" value="true" @(Model.Profile.SmsNotifications ? "checked" : "")>
                            <label class="custom-control-label" for="smsNotifications">SMS Notifications</label>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-maroon">Save Changes</button>
                </form>
            </div>

            <!-- Security Settings -->
            <div class="settings-card mt-4">
                <h3 class="settings-title">Security Settings</h3>
                <form id="securityForm" class="settings-form">
                    <div class="form-group">
                        <label>Current Password</label>
                        <input type="password" class="form-control" name="CurrentPassword" required>
                    </div>
                    <div class="form-group">
                        <label>New Password</label>
                        <input type="password" class="form-control" name="NewPassword" required>
                    </div>
                    <div class="form-group">
                        <label>Confirm New Password</label>
                        <input type="password" class="form-control" name="ConfirmPassword" required>
                    </div>
                    <button type="submit" class="btn btn-maroon">Update Password</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function uploadProfileImage(input) {
            if (input.files && input.files[0]) {
                const formData = new FormData();
                formData.append('profileImage', input.files[0]);

                $.ajax({
                    url: '/Profile/UploadImage',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        if (response.success) {
                            $('#profilePicture').attr('src', response.imageUrl);
                        } else {
                            alert('Failed to upload image: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('An error occurred while uploading the image.');
                    }
                });
            }
        }

        $('#profileForm').on('submit', function(e) {
            e.preventDefault();
            const formData = $(this).serialize();
            
            // Debug: Log the form data
            console.log('Sending form data:', formData);

            $.ajax({
                url: '/Profile/Update',
                type: 'POST',
                data: formData,
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    console.log('Server response:', response); // Debug: Log the response
                    if (response.success) {
                        // Update the displayed information immediately
                        $('.profile-name').text(response.user.firstName + ' ' + response.user.lastName);
                        $('.profile-email').text(response.user.email);
                        $('input[name="PhoneNumber"]').val(response.user.phoneNumber);
                        $('textarea[name="Address"]').val(response.user.address);
                        
                        // Show success message
                        alert('Profile updated successfully!');
                        
                        // Force reload the page to ensure all data is fresh
                        window.location.href = window.location.href;
                    } else {
                        alert('Failed to update profile: ' + response.message);
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error details:', {xhr, status, error}); // Debug: Log error details
                    alert('An error occurred while updating the profile: ' + error);
                }
            });
        });

        $('#securityForm').on('submit', function(e) {
            e.preventDefault();
            const formData = $(this).serialize();

            $.post('/Profile/UpdatePassword', formData)
                .done(function(response) {
                    if (response.success) {
                        alert('Password updated successfully!');
                        this.reset();
                    } else {
                        alert('Failed to update password: ' + response.message);
                    }
                })
                .fail(function() {
                    alert('An error occurred while updating the password.');
                });
        });
    </script>
}

@section Styles {
    <style>
        .profile-container {
            padding: 20px;
        }

        .profile-card {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            text-align: center;
        }

        .profile-header {
            margin-bottom: 30px;
        }

        .profile-image {
            position: relative;
            width: 150px;
            height: 150px;
            margin: 0 auto 20px;
        }

        .profile-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .btn-edit-image {
            position: absolute;
            bottom: 0;
            right: 0;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: var(--primary-color);
            color: white;
            border: none;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s;
        }

        .btn-edit-image:hover {
            background: var(--primary-dark);
            transform: scale(1.1);
        }

        .profile-name {
            color: var(--primary-color);
            font-size: 1.5rem;
            margin-bottom: 5px;
        }

        .profile-email {
            color: var(--text-light);
            margin-bottom: 15px;
        }

        .profile-status {
            display: flex;
            justify-content: center;
            gap: 10px;
        }

        .profile-stats {
            display: flex;
            justify-content: space-around;
            padding-top: 20px;
            border-top: 1px solid #eee;
        }

        .stat-item h4 {
            color: var(--primary-color);
            font-size: 1.5rem;
            margin-bottom: 5px;
        }

        .stat-item p {
            color: var(--text-light);
            margin: 0;
        }

        .settings-card {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
        }

        .settings-title {
            color: var(--primary-color);
            font-size: 1.3rem;
            margin-bottom: 25px;
            padding-bottom: 10px;
            border-bottom: 2px solid #eee;
        }

        .settings-form .form-group {
            margin-bottom: 20px;
        }

        .settings-form label {
            color: var(--text-light);
            font-weight: 500;
            margin-bottom: 8px;
        }

        .settings-form .form-control {
            border-radius: 8px;
            border: 1px solid #eee;
            padding: 12px;
            transition: all 0.3s;
        }

        .settings-form .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(139, 28, 28, 0.25);
        }

        .custom-checkbox {
            margin-bottom: 10px;
        }

        .btn-maroon {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s;
        }

        .btn-maroon:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(139, 28, 28, 0.3);
            color: white;
        }
    </style>
}