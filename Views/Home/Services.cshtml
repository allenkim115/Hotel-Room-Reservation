@model WebApplication1.Models.BaseViewModel
@{
    Layout = "_DashboardLayout";
    ViewData["Title"] = "Hotel Services";
}

<div class="services-container">
    <!-- Dining Services -->
    <section class="service-section">
        <h2 class="section-title">Dining Services</h2>
        <div class="row">
            @foreach (var service in Model.Services.Where(s => s.Category == "Dining"))
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="service-card">
                        <div class="service-image">
                            <img src="@service.ImageUrl" alt="@service.Name" class="img-fluid">
                        </div>
                        <div class="service-details">
                            <h3 class="service-name">@service.Name</h3>
                            <p class="service-description">@service.Description</p>
                            <div class="service-info">
                                <span><i class="fas fa-clock"></i> @service.OperatingHours</span>
                                <span><i class="fas fa-map-marker-alt"></i> @service.Location</span>
                            </div>
                            <button class="btn btn-maroon btn-block" onclick="showBookingModal('@service.Id')">
                                Book Now
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>

    <!-- Wellness Services -->
    <section class="service-section">
        <h2 class="section-title">Wellness Services</h2>
        <div class="row">
            @foreach (var service in Model.Services.Where(s => s.Category == "Wellness"))
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="service-card">
                        <div class="service-image">
                            <img src="@service.ImageUrl" alt="@service.Name" class="img-fluid">
                        </div>
                        <div class="service-details">
                            <h3 class="service-name">@service.Name</h3>
                            <p class="service-description">@service.Description</p>
                            <div class="service-info">
                                <span><i class="fas fa-clock"></i> @service.OperatingHours</span>
                                <span><i class="fas fa-map-marker-alt"></i> @service.Location</span>
                            </div>
                            <button class="btn btn-maroon btn-block" onclick="showBookingModal('@service.Id')">
                                Book Now
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>

    <!-- Additional Services -->
    <section class="service-section">
        <h2 class="section-title">Additional Services</h2>
        <div class="row">
            @foreach (var service in Model.Services.Where(s => s.Category == "Additional"))
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="service-card">
                        <div class="service-image">
                            <img src="@service.ImageUrl" alt="@service.Name" class="img-fluid">
                        </div>
                        <div class="service-details">
                            <h3 class="service-name">@service.Name</h3>
                            <p class="service-description">@service.Description</p>
                            <div class="service-info">
                                <span><i class="fas fa-clock"></i> @service.OperatingHours</span>
                                <span><i class="fas fa-map-marker-alt"></i> @service.Location</span>
                            </div>
                            <button class="btn btn-maroon btn-block" onclick="showBookingModal('@service.Id')">
                                Book Now
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>
</div>

<!-- Booking Modal -->
<div class="modal fade" id="bookingModal" tabindex="-1" role="dialog" aria-labelledby="bookingModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookingModalLabel">Book Service</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="bookingForm">
                    <input type="hidden" id="serviceId" name="ServiceId">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="bookingDate">Booking Date</label>
                                <input type="date" class="form-control" id="bookingDate" name="BookingDate" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="bookingTime">Booking Time</label>
                                <input type="time" class="form-control" id="bookingTime" name="BookingTime" required>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="guests">Number of Guests</label>
                                <input type="number" class="form-control" id="guests" name="NumberOfGuests" min="1" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="specialRequests">Special Requests</label>
                                <textarea class="form-control" id="specialRequests" name="SpecialRequests" rows="3"></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="booking-summary">
                        <h4>Booking Summary</h4>
                        <div class="summary-details">
                            <div class="summary-item">
                                <span>Service:</span>
                                <span id="summaryService"></span>
                            </div>
                            <div class="summary-item">
                                <span>Date & Time:</span>
                                <span id="summaryDateTime"></span>
                            </div>
                            <div class="summary-item">
                                <span>Total Price:</span>
                                <span id="summaryTotal"></span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-maroon" onclick="submitBooking()">Confirm Booking</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let isSubmitting = false;
        const services = JSON.parse('@Html.Raw(Json.Serialize(Model.Services))');

        function showBookingModal(serviceId) {
            serviceId = Number(serviceId);
            const service = services.find(s => s.id === serviceId);
            if (!service) {
                alert('Invalid service selected.');
                return;
            }

            $('#serviceId').val(serviceId);
            $('#summaryService').text(service.Name);
            
            // Set min date to today
            const today = new Date().toISOString().split('T')[0];
            $('#bookingDate').attr('min', today);
            
            // Set max guests if applicable
            if (service.MaxGuests) {
                $('#guests').attr('max', service.MaxGuests);
                $('#guests').attr('placeholder', `Max ${service.MaxGuests} guests`);
            }
            
            // Reset form
            $('#bookingForm')[0].reset();
            $('#bookingModal').modal('show');
        }

        function validateDateTime() {
            const bookingDate = $('#bookingDate').val();
            const bookingTime = $('#bookingTime').val();
            const serviceId = Number($('#serviceId').val());
            const service = services.find(s => s.id === serviceId);
            
            if (!bookingDate || !bookingTime) {
                return false;
            }

            const selectedDateTime = new Date(`${bookingDate}T${bookingTime}`);
            const now = new Date();
            
            // Prevent past bookings
            if (selectedDateTime <= now) {
                alert('Please select a future date and time');
                return false;
            }

            // Validate operating hours
            if (service.OperatingHours) {
                const [openTime, closeTime] = service.OperatingHours.split(' - ');
                const [openHour, openMin] = openTime.split(':').map(Number);
                const [closeHour, closeMin] = closeTime.split(':').map(Number);
                
                const bookingHour = selectedDateTime.getHours();
                const bookingMin = selectedDateTime.getMinutes();
                
                const isBeforeOpening = bookingHour < openHour || 
                    (bookingHour === openHour && bookingMin < openMin);
                const isAfterClosing = bookingHour > closeHour || 
                    (bookingHour === closeHour && bookingMin > closeMin);
                
                if (isBeforeOpening || isAfterClosing) {
                    alert(`This service is only available between ${openTime} and ${closeTime}`);
                    return false;
                }
            }
            
            return true;
        }

        function validateGuests() {
            const guests = parseInt($('#guests').val());
            const serviceId = Number($('#serviceId').val());
            const service = services.find(s => s.id === serviceId);
            
            if (guests < 1) {
                alert('Number of guests must be at least 1');
                return false;
            }
            
            if (service.MaxGuests && guests > service.MaxGuests) {
                alert(`Maximum capacity for this service is ${service.MaxGuests} guests`);
                return false;
            }
            
            return true;
        }

        function updateBookingSummary() {
            if (!validateDateTime()) {
                return;
            }

            const bookingDate = $('#bookingDate').val();
            const bookingTime = $('#bookingTime').val();
            const guests = $('#guests').val();
            const serviceId = Number($('#serviceId').val());
            const service = services.find(s => s.id === serviceId);
            
            if (bookingDate && bookingTime && service) {
                const dateTime = new Date(`${bookingDate}T${bookingTime}`);
                const formattedDateTime = dateTime.toLocaleString();
                const total = service.pricePerPerson * guests;
                $('#summaryDateTime').text(formattedDateTime);
                $('#summaryTotal').text(`$${total.toFixed(2)}`);
            }
        }

        $('#bookingDate, #bookingTime, #guests').on('change', updateBookingSummary);

        function submitBooking() {
            if (isSubmitting) return;
            
            if (!validateDateTime() || !validateGuests()) {
                return;
            }

            isSubmitting = true;
            const submitButton = $('button[onclick="submitBooking()"]');
            const originalText = submitButton.text();
            submitButton.prop('disabled', true).text('Processing...');

            const formData = $('#bookingForm').serialize();
            $.post('/Services/Book', formData)
                .done(function(response) {
                    if (response.success) {
                        alert('Service booked successfully!');
                        window.location.href = '/Home/Reservations';
                    } else {
                        alert('Failed to book service: ' + response.message);
                    }
                })
                .fail(function(xhr) {
                    alert('An error occurred while booking the service: ' + 
                          (xhr.responseJSON?.message || 'Please try again later.'));
                })
                .always(function() {
                    isSubmitting = false;
                    submitButton.prop('disabled', false).text(originalText);
                });
        }
    </script>
}

@section Styles {
    <style>
        .services-container {
            padding: 2rem 0;
        }

        .service-section {
            margin-bottom: 3rem;
        }

        .section-title {
            color: var(--primary-color);
            font-size: 2rem;
            margin-bottom: 2rem;
            text-align: center;
        }

        .service-card {
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: transform 0.3s ease;
            height: 100%;
        }

        .service-card:hover {
            transform: translateY(-5px);
        }

        .service-image {
            height: 200px;
            overflow: hidden;
        }

        .service-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .service-details {
            padding: 1.5rem;
        }

        .service-name {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            color: var(--primary-color);
        }

        .service-description {
            color: #666;
            margin-bottom: 1rem;
        }

        .service-info {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .service-info span {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #666;
        }

        .booking-summary {
            background: #f8f9fa;
            padding: 1rem;
            border-radius: 5px;
            margin-top: 1rem;
        }

        .summary-details {
            margin-top: 1rem;
        }

        .summary-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.5rem;
        }

        .summary-item:last-child {
            margin-bottom: 0;
            font-weight: bold;
            color: var(--primary-color);
        }
    </style>
}