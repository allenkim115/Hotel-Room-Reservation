@model List<WebApplication1.Models.Room>
@{
    ViewData["Title"] = "Room Inventory";
    Layout = "_AdminLayout";
}

<h2>Room Inventory</h2>
<p>Manage rooms here. (Add, edit, delete, and view room inventory.)</p>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
        }

        .header {
            background: linear-gradient(135deg, #8B1C1C 0%, #5C0F0F 100%);
            color: white;
            padding: 15px 30px;
            margin-bottom: 30px;
        }

        .room-card {
            background-color: white;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: transform 0.2s;
        }

        .room-card:hover {
            transform: translateY(-5px);
        }

        .room-status {
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: bold;
        }

        .status-available {
            background-color: #28a745;
            color: white;
        }

        .status-occupied {
            background-color: #dc3545;
            color: white;
        }

        .status-maintenance {
            background-color: #ffc107;
            color: black;
        }

        .room-amenities {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }

        .amenity-badge {
            background-color: #e9ecef;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.8rem;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center">
                <h4>Room Management</h4>
                <a href="@Url.Action("AdminDash", "Admin")" class="btn btn-outline-light">
                    <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
                </a>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row mb-4">
            <div class="col-md-8">
                <div class="btn-group">
                    <button class="btn btn-outline-primary active" onclick="filterRooms('all')">All Rooms</button>
                    <button class="btn btn-outline-success" onclick="filterRooms('available')">Available</button>
                    <button class="btn btn-outline-danger" onclick="filterRooms('occupied')">Occupied</button>
                    <button class="btn btn-outline-warning" onclick="filterRooms('maintenance')">Maintenance</button>
                </div>
            </div>
            <div class="col-md-4 text-end">
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addRoomModal">
                    <i class="fas fa-plus me-2"></i>Add New Room
                </button>
            </div>
        </div>

        <div class="row" id="roomsGrid">
            @foreach (var room in Model)
            {
                <div class="col-md-4">
                    <div class="room-card">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <h5>@room.RoomType @room.RoomNumber</h5>
                                <p class="text-muted mb-2">Floor: @room.Floor</p>
                            </div>
                            <span class="room-status status-@room.Status.ToString().ToLower()">@room.Status</span>
                        </div>
                        <div class="room-details">
                            <p><i class="fas fa-users me-2"></i>Capacity: @room.Capacity Adults</p>
                            <p><i class="fas fa-dollar-sign me-2"></i>Price: $@room.PricePerNight/night</p>
                        </div>
                        <div class="room-amenities">
                            @if (!string.IsNullOrEmpty(room.Features))
                            {
                                foreach (var feature in room.Features.Split(','))
                                {
                                    <span class="amenity-badge"><i class="fas fa-check"></i> @feature.Trim()</span>
                                }
                            }
                        </div>
                        <div class="mt-3">
                            <button class="btn btn-sm btn-outline-primary me-2" onclick="editRoom(@room.Id)">
                                <i class="fas fa-edit me-1"></i>Edit
                            </button>
                            <button class="btn btn-sm btn-outline-danger" onclick="deleteRoom(@room.Id)">
                                <i class="fas fa-trash me-1"></i>Delete
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Add Room Modal -->
    <div class="modal fade" id="addRoomModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Room</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addRoomForm" asp-action="AddRoom" asp-controller="Admin" method="post">
                        <div class="mb-3">
                            <label class="form-label">Room Number</label>
                            <input type="text" class="form-control" name="RoomNumber" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Room Type</label>
                            <select class="form-select" name="RoomType" required>
                                <option value="Standard">Standard</option>
                                <option value="Deluxe">Deluxe</option>
                                <option value="Suite">Suite</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Floor</label>
                            <input type="number" class="form-control" name="Floor" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Capacity</label>
                            <input type="number" class="form-control" name="Capacity" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Price per Night</label>
                            <input type="number" class="form-control" name="PricePerNight" step="0.01" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Features (comma-separated)</label>
                            <input type="text" class="form-control" name="Features" placeholder="WiFi, TV, AC">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="saveRoom()">Save Room</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        // Filter rooms based on status
        function filterRooms(status) {
            const rooms = document.querySelectorAll('.room-card');
            rooms.forEach(room => {
                const roomStatus = room.querySelector('.room-status').textContent.toLowerCase();
                if (status === 'all' || roomStatus === status) {
                    room.closest('.col-md-4').style.display = 'block';
                } else {
                    room.closest('.col-md-4').style.display = 'none';
                }
            });
        }

        // Edit room details
        function editRoom(roomId) {
            // Implementation for editing room
            window.location.href = `/Admin/EditRoom/${roomId}`;
        }

        // Delete room
        function deleteRoom(roomId) {
            if (confirm('Are you sure you want to delete this room?')) {
                fetch(`/Admin/DeleteRoom/${roomId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Failed to delete room: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while deleting the room');
                });
            }
        }

        // Save new room
        function saveRoom() {
            const form = document.getElementById('addRoomForm');
            const formData = new FormData(form);

            fetch('/Admin/AddRoom', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Failed to add room: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while adding the room');
            });
        }
    </script>
</body>
</html> 